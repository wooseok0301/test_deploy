/* Updated yearSelector styles */
.yearSelector {
  display: flex;
  flex-direction: column; /* Changed to column for grouped years */
  gap: 8px; /* Gap between year groups */
  align-items: flex-start; /* Align groups to the left */
  margin-bottom: 3rem;
  padding: 0 1rem; /* Adjust padding for better visual alignment */
}

/* Base button style for both group and individual year buttons */
.yearButton {
  width: 100%; /* Take full width of its container (group or main yearSelector) */
  padding: 12px 18px;
  border: none;
  background: transparent;
  font-size: 18px;
  color: #222;
  border-radius: 8px;
  cursor: pointer;
  text-align: left;
  transition: background 0.12s ease, color 0.12s ease, font-weight 0.12s ease;
  white-space: nowrap; /* Prevent text wrapping */
}

/* Style for the active year button */
.yearButton.active {
  background: #222; /* Dark background for active year */
  color: #fff; /* White text for active year */
  font-weight: bold;
}

/* Hover effect for all year buttons */
.yearButton:hover {
  background: #ededed;
  color: #222; /* Ensure text color is readable on hover */
}

/* Specific styles for year group buttons (the '2020~2024' buttons) */
.yearGroupButton {
  font-weight: normal; /* Default for group buttons */
  background: transparent;
  color: #222;
}

/* Active style for the year group button when its group is open */
.yearGroupButton.activeGroup {
  font-weight: bold;
  background: #e0e0e0; /* Slightly darker background for active group button */
}

/* Hover effect for year group buttons */
.yearGroupButton:hover {
  background: #ededed;
}

/* Styles for the container of individual years within a group */
.yearSubList {
  margin-left: 15px; /* Indent individual years */
  display: flex;
  flex-direction: column;
  gap: 4px; /* Smaller gap between individual year buttons */
  width: calc(100% - 15px); /* Adjust width to account for margin */
}

/* Media queries for responsiveness */
@media (max-width: 768px) {
  .yearSelector {
    flex-direction: row; /* Back to row for mobile */
    overflow-x: auto; /* Enable horizontal scrolling */
    -webkit-overflow-scrolling: touch;
    padding-bottom: 10px; /* Space for scrollbar */
    gap: 1rem; /* Gap between buttons in row mode */
    align-items: center; /* Center buttons vertically in row mode */
    margin-bottom: 2rem;
  }
  .yearButton {
    width: auto; /* Allow buttons to size based on content */
    flex-shrink: 0; /* Prevent buttons from shrinking */
    padding: 0.5rem 1rem;
    font-size: 1rem;
    border: 2px solid #000;
    background: none;
    color: #000;
    border-radius: 20px; /* Pill shape for individual buttons on mobile */
    text-align: center; /* Center text in mobile buttons */
  }
  .yearButton.active {
    background-color: #000;
    color: white;
  }
  .yearButton:hover {
    background-color: #000;
    color: white;
  }

  /* Reset grouped year specific styles for mobile */
  .yearGroupButton, .yearGroupButton.activeGroup {
    font-weight: normal;
    background: none;
    color: #000;
    border-radius: 20px;
    border: 2px solid #000;
  }
  .yearGroupButton:hover {
    background-color: #000;
    color: white;
  }
  .yearSubList {
    display: none; /* Hide sub-lists on mobile, switch to flat list */
  }
}

.bannerImage {
  width: 250px;
  height: auto;
  display: block;
  margin: 0 auto;
}

.container {
  width: 100%;
  max-width: 1800px;
  margin: 0 auto;
  background-color: #ffffff;
  min-height: 100vh;
  flex-direction: column;
  align-items: center;
}

.contentWrapper {
  display: flex;
  width: 100%;
  max-width: 1800px;
  gap: 1rem;
  justify-content: center;
}

.leftSpace {
  width: 300px;
  flex-shrink: 0;
}

.rightBanner {
  width: 300px;
  position: sticky;
  top: 3px;
  height: fit-content;
  background: transparent;
  padding: 0;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  flex-shrink: 0;
  margin-bottom: 30px;
}

.mainContent {
  flex: 1;
  max-width: 1200px;
  padding-bottom: 30px;
}

.title {
  text-align: center;
  font-size: 2.5rem;
  font-weight: bold;
  margin-bottom: 3rem;
  color: #000;
}
.noPostsMessage {
  grid-column: 1 / -1; /* 그리드 전체 너비를 차지 */
  text-align: center;
  font-size: 1.1rem;
  color: #7f8c8d;
  padding: 3rem 1rem;
  background-color: #f8f9fa;
  border-radius: 12px;
  margin-top: 2rem;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
}

.photoAlbumLinksSection {
  margin-top: 3rem;
  margin-bottom: 3rem;
  padding: 1.5rem 2rem;
  background-color: #f9f9f9;
  border-radius: 12px;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
  max-width: 1100px;
  margin-left: auto;
  margin-right: auto;
}

.photoAlbumSectionTitle {
  font-size: 1.8rem;
  font-weight: bold;
  color: #2c3e50;
  margin-bottom: 1.5rem;
  text-align: center;
}

.photoAlbumScrollContainer {
  overflow: hidden; /* Hide scrollbars, we'll control scrolling with animation */
  margin-bottom: 1rem;
}

.photoAlbumScrollTrack {
  display: flex;
  white-space: nowrap; /* Keep items in a single line */
  animation: scrollLeft 35s linear infinite; /* Default animation */
  padding: 10px 0; /* Add some vertical padding for shadow/spacing */
}

.photoAlbumScrollTrack.reverse {
  animation: scrollRight 35s linear infinite; /* Reverse animation */
}

/* New style for static (non-scrolling) track */
.photoAlbumStaticTrack {
  display: flex;
  flex-wrap: wrap; /* Allow items to wrap into multiple lines if needed */
  justify-content: center; /* Center items when not scrolling */
  padding: 10px 0;
  white-space: normal; /* Allow text wrapping within items if they were text-based */
}


/* Pause animation on hover */
.photoAlbumScrollTrack:hover {
  animation-play-state: paused;
}


.photoAlbumLinkItem {
  position: relative;
  overflow: hidden;
  border: 1px solid #e0e0e0;
  border-radius: 8px;
  transition: all 0.2s ease;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
  height: 200px; /* Fixed height for consistent image card size */
  width: 250px; /* Fixed width for consistent image card size */
  flex-shrink: 0; /* Prevent items from shrinking */
  margin: 0 8px; /* Spacing between items */
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
}

.photoAlbumLinkItem:hover {
  transform: translateY(-3px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  border-color: #a0a0a0;
}

.photoAlbumImage {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: 8px;
  transition: transform 0.3s ease;
}

.photoAlbumLinkItem:hover .photoAlbumImage {
  transform: scale(1.05);
}

.photoAlbumLinkText {
  color: #7f8c8d;
  font-size: 0.9rem;
  text-align: center;
  padding: 1rem;
}

/* Keyframe animations for scrolling */
@keyframes scrollLeft {
  0% { transform: translateX(0); }
  100% { transform: translateX(-100%); } /* Scrolls a full copy of the track */
}

@keyframes scrollRight {
  0% { transform: translateX(-100%); } /* Starts from the end of the copied track */
  100% { transform: translateX(0); }
}

/* Modal styles (Keep as is, but ensure these are present) */
.modalContent {
  position: relative;
  max-width: 90%;
  max-height: 90%;
  padding: 0;
  background: transparent;
  border-radius: 8px;
  display: flex;
  justify-content: center;
  align-items: center;
  animation: fadeIn 0.3s ease-out;
}

.modalImage {
  max-width: 90vw; /* Use vw for image to fit screen better */
  max-height: 90vh; /* Use vh for image to fit screen better */
  object-fit: contain;
  border-radius: 8px;
  box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
}

.modalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.8);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}
.closeButton {
  position: absolute;
  top: 15px;
  right: 15px;
  background: rgba(255, 255, 255, 0.3);
  color: white;
  border: none;
  border-radius: 50%;
  width: 40px;
  height: 40px;
  font-size: 1.5rem;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  z-index: 1001;
  transition: background-color 0.2s ease;
}

.closeButton:hover {
  background-color: rgba(255, 255, 255, 0.5);
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

/* Media queries for responsiveness */
@media (max-width: 768px) {
  .photoAlbumLinkItem {
    width: 200px; /* Adjust width for smaller screens */
    height: 150px;
  }
  .photoAlbumScrollTrack {
    animation-duration: 20s; /* Faster scroll on mobile */
  }
}

@media (max-width: 480px) {
  .photoAlbumLinkItem {
    width: 150px; /* Further adjust width for very small screens */
    height: 120px;
  }
  .photoAlbumLinksSection {
    padding: 1rem;
  }
  .photoAlbumSectionTitle {
    font-size: 1.4rem;
  }
}
.postsGrid {
  display: grid;
  grid-template-columns: repeat(3, minmax(280px, 1fr));
  gap: 28px;
  max-width: 1100px;
  margin: 0 auto;
  box-sizing: border-box;
  justify-content: center;
}

/* ========================================================= */
/* 카드 섹션 수정 */
/* ========================================================= */
.card {
  background-color: #ffffff;
  border-radius: 15px;
  display: flex;
  flex-direction: column;
  color: #34495e;
  text-decoration: none;
  padding: 0;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  position: relative;
  overflow: hidden;
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
  width: 100%;
  min-height: 480px; /* 최소 높이 설정, 콘텐츠에 따라 늘어날 수 있도록 */
}

.card:hover {
  transform: translateY(-8px);
  box-shadow: 0 12px 25px rgba(0, 0, 0, 0.15);
}

.imageContainer {
  width: 100%;
  padding-bottom: 75%; /* 4:3 비율 유지 */
  position: relative;
  border-radius: 15px 15px 0 0;
  overflow: hidden;
  background-color: #ecf0f1;
  flex-shrink: 0;
}

.cardImage {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: contain;
  transition: transform 0.4s ease;
  background-color: #ecf0f1;
}

.cardContent {
  padding: 15px;
  display: flex;
  flex-direction: column;
  gap: 8px;
  background-color: white;
  flex: 1; /* 남은 공간을 유연하게 채우도록 */
  justify-content: flex-start; /* 콘텐츠가 위에서부터 쌓이도록 */
}

.cardContent h3 {
  margin: 0;
  font-size: 16px;
  font-weight: 700;
  color: #2c3e50;
  white-space: normal;
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 2; /* 두 줄까지 표시 */
  -webkit-box-orient: vertical;
  min-height: 2.8em; /* 두 줄 높이 확보 */
  line-height: 1.4;
}

.cardInfo {
  display: flex;
  flex-direction: column;
  gap: 5px;
  font-size: 15px;
  color: #7f8c8d;
  margin-bottom: 8px;
  flex-grow: 1; /* 정보 부분이 가능한 공간을 차지하도록 */
}

.techStackContainer {
  display: flex;
  flex-direction: column;
  gap: 5px;
  margin-top: 5px;
  /* 기술 스택이 없거나 적어도 최소한의 공간을 차지하여 레이아웃 변동을 줄임 */
  min-height: 20px;
}

.techStackLabel {
  font-size: 14px;
  color: #5d6d7e;
  font-weight: 600;
  margin-bottom: 2px; /* 라벨과 스택 아이템 사이 간격 */
}

.techStackList {
  display: flex;
  flex-wrap: wrap;
  gap: 6px;
  margin-top: 0; /* techStackLabel에서 간격 조정했으므로 여기는 0 */
  align-items: center;
}

.techStackItem {
  background: #e0e6ea;
  border-radius: 10px;
  padding: 3px 8px;
  font-size: 12px;
  color: #34495e;
  white-space: nowrap;
  font-weight: 500;
}

.techStackMore {
  background: #cdd4da;
  border-radius: 10px;
  padding: 3px 8px;
  font-size: 12px;
  color: #5d6d7e;
  white-space: nowrap;
  font-weight: 500;
}

.cardMeta {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-top: auto; /* 항상 카드 하단에 위치하도록 */
  padding-top: 10px;
  border-top: 1px solid #ecf0f1;
  font-size: 14px;
  margin-bottom: 0;
}

.cardStats {
  display: flex;
  align-items: center;
  gap: 15px;
  font-size: 14px;
  color: #7f8c8d;
  width: 100%;
  justify-content: space-between;
}

.createdAt {
  color: #95a5a6;
  font-size: 13px;
  padding: 5px 10px;
  border-radius: 8px;
  background-color: #f8f9fa;
  margin-left: auto;
}

.likeButton,
.viewCount {
  display: flex;
  align-items: center;
  gap: 6px;
  color: #7f8c8d;
}

.likeButton {
  background: none;
  border: none;
  cursor: pointer;
  padding: 6px;
  transition: all 0.2s ease;
  border-radius: 50%;
}

.likeButton:hover {
  transform: scale(1.15);
  background-color: rgba(255, 77, 77, 0.1);
}

.likeButton.liked {
  color: #e74c3c;
}

.heartIcon {
  width: 20px;
  height: 20px;
  transition: all 0.2s ease;
}

.viewCount {
  display: flex;
  align-items: center;
  gap: 6px;
}

.viewCount svg {
  width: 18px;
  height: 18px;
}
/* ========================================================= */
/* 카드 섹션 수정 끝 */
/* ========================================================= */


.loading {
  text-align: center;
  padding: 2rem;
  font-size: 1.2rem;
  color: #666;
}

.loadingMore {
  text-align: center;
  padding: 1.5rem;
  color: #7f8c8d;
  font-size: 1.1rem;
  margin-top: 1.5rem;
}

.loadMoreButton {
  display: block;
  margin: 2.5rem auto;
  padding: 15px 30px;
  background-color: #3498db;
  color: white;
  border: none;
  border-radius: 10px;
  font-size: 18px;
  font-weight: 700;
  cursor: pointer;
  transition: all 0.3s ease;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
}

.loadMoreButton:hover {
  background-color: #2980b9;
  transform: translateY(-3px);
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
}

.loadMoreButton:disabled {
  background-color: #bdc3c7;
  cursor: not-allowed;
  transform: none;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.loadMoreContainer {
  display: flex;
  justify-content: center;
  width: 100%;
  max-width: 1100px;
  margin: 2rem auto 0;
  padding-right: 0;
  box-sizing: border-box;
}

.loadMoreSmallButton {
  background-color: #ecf0f1;
  color: #34495e;
  border: 1px solid #bdc3c7;
  padding: 0.8rem 1.5rem;
  border-radius: 25px;
  cursor: pointer;
  font-size: 1rem;
  font-weight: 600;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
}

.loadMoreSmallButton:hover {
  background-color: #dfe6ea;
  color: #2c3e50;
  border-color: #95a5a6;
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.loadMoreSmallButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  background-color: #f5f7f9;
  border-color: #e0e6ea;
  color: #95a5a6;
  transform: none;
  box-shadow: none;
}

@keyframes heartBeat {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.3);
  }
  100% {
    transform: scale(1);
  }
}

/* Updated metaHeader styles */
.metaHeader {
  width: 100vw;
  background: #fde1e4; /* Default background, can be overridden by yearMeta.color */
  padding: 3rem 1rem 2rem 1rem;
  border-radius: 0;
  text-align: center;
  margin-bottom: 2.5rem;
  position: relative;
  left: 50%;
  right: 50%;
  margin-left: -50vw;
  margin-right: -50vw;
  box-sizing: border-box; /* Ensure padding is included in width */
  display: flex;
  flex-direction: column; /* Stack children vertically */
  align-items: center; /* Center horizontally */
}

.metaTitle {
  font-size: 3rem;
  font-weight: bold;
  color: #7a2327; /* Default color, can be overridden by yearMeta.textColor */
  margin-bottom: 2rem; /* More space below the main title */
  line-height: 1.2;
  max-width: 1200px; /* Constrain width for readability */
  width: 100%;
}

.metaInfoCards {
  display: flex;
  justify-content: center; /* Center the cards horizontally */
  gap: 20px; /* Space between cards */
  max-width: 1200px; /* Constrain width of the card container */
  width: 100%;
  flex-wrap: wrap; /* Allow cards to wrap on smaller screens */
  margin-top: 1rem; /* Space between title and cards */
}

.metaInfoCard {
  background-color: rgba(255, 255, 255, 1); /* Slightly transparent white for cards */
  border-radius: 12px;
  padding: 1.2rem 1.5rem;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
  flex: 1; /* Allow cards to grow and shrink */
  min-width: 200px; /* Minimum width for each card */
  max-width: 280px; /* Max width for each card */
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.metaInfoCard:hover {
  transform: translateY(-5px);
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.12);
}

.metaInfoCardLabel {
  font-size: 1rem;
  font-weight: 600;
  color: #4a4a4a; /* Darker grey for labels */
  margin-bottom: 0.5rem;
}

.metaInfoCardValue {
  font-size: 1.1rem;
  font-weight: 700;
  color: #2c3e50; /* Stronger color for names */
  word-break: keep-all; /* Prevent names from breaking awkwardly */
}


@media (max-width: 1200px) {
  .leftSpace,
  .rightBanner {
    display: none;
  }
  .mainContent {
    max-width: 100%;
  }
  .postsGrid {
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 28px;
    padding: 0 1rem;
  }
  .metaHeader {
    padding-left: 1rem; /* Adjust padding for smaller screens */
    padding-right: 1rem;
  }
  .metaInfoCards {
    padding: 0 1rem; /* Add padding to card container on smaller screens */
    gap: 15px; /* Slightly reduce gap */
  }
  .metaInfoCard {
    min-width: unset; /* Remove min-width constraint */
    max-width: 48%; /* Two cards per row */
  }
}

@media (max-width: 768px) {
  .postsGrid {
    grid-template-columns: 1fr;
    max-width: 450px;
    gap: 25px;
  }
  .card {
    height: 450px;
  }
  .imageContainer {
    padding-bottom: 75%;
    height: auto;
  }
  .cardContent h3 {
    font-size: 1.2rem;
    min-height: 2.5em;
    line-height: 1.3;
  }
  .cardInfo, .techStackLabel, .cardStats {
    font-size: 13px;
  }
  .techStackItem, .techStackMore {
    font-size: 10px;
    padding: 2px 6px;
  }
  .likeButton, .views {
    gap: 4px;
  }
  .heartIcon {
    width: 18px;
    height: 18px;
  }
  .views svg {
    width: 15px;
    height: 15px;
  }
  .metaTitle {
    font-size: 2rem; /* Smaller title on mobile */
    margin-bottom: 1.5rem;
  }
  .metaInfoCards {
    flex-direction: column; /* Stack cards vertically on very small screens */
    align-items: center; /* Center stacked cards */
    gap: 10px; /* Reduce gap between stacked cards */
  }
  .metaInfoCard {
    width: 90%; /* Make cards wider when stacked */
    max-width: 350px; /* Max width for stacked cards */
    padding: 1rem;
  }
  .metaInfoCardLabel {
    font-size: 0.9rem;
  }
  .metaInfoCardValue {
    font-size: 1rem;
  }
}

@media (max-width: 600px) {
  .postsGrid {
    max-width: 300px;
    gap: 20px;
  }
  .card {
    height: 420px;
  }
  .imageContainer {
    padding-bottom: 75%;
    height: auto;
  }
}